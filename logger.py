# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'logger.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from datetime import datetime, date
from PyQt5.QtWidgets import QMessageBox
import os

class Ui_PC_Tracker(object):
    def setupUi(self, PC_Tracker):
        WIN_WIDTH = 600
        WIN_HEIGHT = 340
        PC_Tracker.setObjectName("PC_Tracker")
        PC_Tracker.setFixedSize(WIN_WIDTH, WIN_HEIGHT)
        self.centralwidget = QtWidgets.QWidget(PC_Tracker)
        self.centralwidget.setObjectName("centralwidget")
        self.btn_dropoff = QtWidgets.QPushButton(self.centralwidget)
        self.btn_dropoff.setGeometry(QtCore.QRect(120, 190, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_dropoff.setFont(font)
        self.btn_dropoff.setObjectName("btn_dropoff")
        self.btn_pickup = QtWidgets.QPushButton(self.centralwidget)
        self.btn_pickup.setGeometry(QtCore.QRect(350, 190, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_pickup.setFont(font)
        self.btn_pickup.setObjectName("btn_pickup")
        self.label_firstName = QtWidgets.QLabel(self.centralwidget)
        self.label_firstName.setGeometry(QtCore.QRect(20, 60, 93, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_firstName.setFont(font)
        self.label_firstName.setObjectName("label_firstName")
        self.label_lastName = QtWidgets.QLabel(self.centralwidget)
        self.label_lastName.setGeometry(QtCore.QRect(300, 60, 91, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_lastName.setFont(font)
        self.label_lastName.setObjectName("label_lastName")
        self.label_serialNumber = QtWidgets.QLabel(self.centralwidget)
        self.label_serialNumber.setGeometry(QtCore.QRect(27, 120, 79, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_serialNumber.setFont(font)
        self.label_serialNumber.setObjectName("label_serialNumber")
        self.input_firstName = QtWidgets.QLineEdit(self.centralwidget)
        self.input_firstName.setGeometry(QtCore.QRect(120, 60, 160, 31))
        self.input_firstName.setObjectName("input_firstName")
        self.input_lastName = QtWidgets.QLineEdit(self.centralwidget)
        self.input_lastName.setGeometry(QtCore.QRect(400, 60, 160, 31))
        self.input_lastName.setObjectName("input_lastName")
        self.input_serialNumber = QtWidgets.QLineEdit(self.centralwidget)
        self.input_serialNumber.setGeometry(QtCore.QRect(120, 120, 160, 31))
        self.input_serialNumber.setObjectName("input_serialNumber")
        self.label_lastSubmission = QtWidgets.QLabel(self.centralwidget)
        self.label_lastSubmission.setGeometry(QtCore.QRect(20, 260, 401, 21))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift")
        font.setPointSize(10)
        font.setItalic(True)
        self.label_lastSubmission.setFont(font)
        self.label_lastSubmission.setObjectName("label_lastSubmission")
        self.label_title = QtWidgets.QLabel(self.centralwidget)
        self.label_title.setGeometry(QtCore.QRect(145, 0, 310, 31))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.btn_clear = QtWidgets.QPushButton(self.centralwidget)
        self.btn_clear.setGeometry(QtCore.QRect(340, 120, 120, 31))
        self.btn_clear.setObjectName("btn_clear")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(15, 250, 570, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        PC_Tracker.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(PC_Tracker)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 571, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        PC_Tracker.setMenuBar(self.menubar)
        self.actionAbout = QtWidgets.QAction(PC_Tracker)
        self.actionAbout.setObjectName("actionAbout")
        self.actionOpen_Log = QtWidgets.QAction(PC_Tracker)
        self.actionOpen_Log.setObjectName("actionOpen_Log")
        self.menuFile.addAction(self.actionOpen_Log)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(PC_Tracker)
        QtCore.QMetaObject.connectSlotsByName(PC_Tracker)
        PC_Tracker.setTabOrder(self.input_firstName, self.input_lastName)
        PC_Tracker.setTabOrder(self.input_lastName, self.input_serialNumber)
        PC_Tracker.setTabOrder(self.input_serialNumber, self.btn_dropoff)
        PC_Tracker.setTabOrder(self.btn_dropoff, self.btn_pickup)
        PC_Tracker.setTabOrder(self.btn_pickup, self.btn_clear)

        self.btn_dropoff.clicked.connect(lambda: self.on_click(" dropped off PC SN: "))
        self.btn_pickup.clicked.connect(lambda: self.on_click(" picked up PC SN: "))
        self.actionOpen_Log.triggered.connect(lambda: self.openLog())
        self.btn_clear.clicked.connect(lambda: self.clearFields())

    def retranslateUi(self, PC_Tracker):
        _translate = QtCore.QCoreApplication.translate
        PC_Tracker.setWindowTitle(_translate("PC_Tracker", "MainWindow"))
        self.btn_dropoff.setText(_translate("PC_Tracker", "Dropped Off"))
        self.btn_pickup.setText(_translate("PC_Tracker", "Picked Up"))
        self.label_firstName.setText(_translate("PC_Tracker", "First Name:"))
        self.label_lastName.setText(_translate("PC_Tracker", "Last Name:"))
        self.label_serialNumber.setText(_translate("PC_Tracker", "Serial No:"))
        self.label_lastSubmission.setText(_translate("PC_Tracker", "No previous data to display..."))
        self.label_lastSubmission.adjustSize()
        self.label_title.setText(_translate("PC_Tracker", " PC Inventory Logger"))
        self.btn_clear.setText(_translate("PC_Tracker", "Clear all fields"))
        self.menuFile.setTitle(_translate("PC_Tracker", "File"))
        self.actionOpen_Log.setText(_translate("PC_Tracker", "Open Log"))
        self.actionOpen_Log.setShortcut(_translate("PC_Tracker", "Ctrl+O"))
    
    def on_click(self, text):
        def throw_error():
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setWindowTitle("Submission Error")
            msg.setText("Attempted Submission of Empty Field!")
            msg.setInformativeText("Ensure no fields are left blank.")
            msg.setDetailedText("Error thrown to preserve file consistency.")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.setDefaultButton(QMessageBox.Ok)
            x = msg.exec_()

        if self.input_firstName.text() == "":
            throw_error()
        elif self.input_lastName.text() == "":
            throw_error()
        elif self.input_serialNumber.text() == "":
            throw_error()
        else:
            now = datetime.now()
            today = date.today()
            current_time = now.strftime("%H:%M")
            current_date = today.strftime("%d %b %Y")
            mytext = self.input_firstName.text() + " " + self.input_lastName.text() + text + self.input_serialNumber.text()
            self.label_lastSubmission.setText(mytext)
            self.label_lastSubmission.adjustSize()
            mytext = mytext + " on " + current_date + " at " + current_time
            myfile = open("Inventory.log", "a")
            myfile.write(mytext + "\n\n")
            myfile.close()
            self.input_serialNumber.clear()

    def openLog(self):
        thisfile = open("Inventory.log", "a")
        thisfile.close()
        os.startfile(r'C:\Program Files (x86)\PC Tracker\Inventory.log')

    def clearFields(self):
        self.input_firstName.clear()
        self.input_lastName.clear()
        self.input_serialNumber.clear()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    PC_Tracker = QtWidgets.QMainWindow()
    ui = Ui_PC_Tracker()
    ui.setupUi(PC_Tracker)
    PC_Tracker.show()
    sys.exit(app.exec_())